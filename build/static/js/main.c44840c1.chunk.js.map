{"version":3,"sources":["reportWebVitals.js","services/notes.js","PhoneBook.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","axios","get","newObject","post","id","delete","Footer","style","color","fontStyle","fontSize","Name","content","deleteItem","console","log","name","number","onClick","PhoneBook","useState","names","setNames","newItem","setNewItem","useEffect","noteService","response","data","value","onChange","event","target","onSubmit","preventDefault","concat","alert","type","map","index","filter","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8BCNRQ,EAAU,eAkBF,EAhBC,WACX,OAAOC,IAAMC,IAAIF,IAeP,EAZC,SAAAG,GACX,OAAOF,IAAMG,KAAKJ,EAASG,IAWjB,EAJK,SAACE,GAChB,OAAOJ,IAAMK,OAAN,UAAgBN,EAAhB,YAA2BK,K,OCbhCE,EAAS,WAMX,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,wDAA0B,uBAA1B,kBACmB,uBADnB,kBAEmB,uBAFnB,2BASFC,EAAO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAEpB,OADAC,QAAQC,IAAIH,GAER,gCACI,+BACI,6BAAKA,EAAQI,OAAU,6BAAKJ,EAAQK,SACpC,6BAAI,wBAAQC,QAASL,EAAjB,4BAsGLM,EAhGG,WACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,CACnCJ,KAAK,GACLC,OAAQ,KAFZ,mBAAOM,EAAP,KAAgBC,EAAhB,KAKAC,qBAAU,WACNC,IAEKjC,MAAK,SAAAkC,GACFb,QAAQC,IAAI,gBACZO,EAASK,EAASC,WAE5B,IAEFd,QAAQC,IAAI,wBAAwBM,GA0CpC,OAFAP,QAAQC,IAAI,UAAUQ,GAGlB,gCACI,2CACA,2CACA,+BACI,wCACI,uBACIM,MAAON,EAAQP,KACfc,SAhDK,SAACC,GACtBP,EAAW,2BAAID,GAAL,IAAaP,KAAKe,EAAMC,OAAOH,iBAmDrC,uBAAMI,SA5CE,SAACF,GACbA,EAAMG,iBACc,KAAjBX,EAAQP,KAIW,KAAnBO,EAAQN,OAOPS,EACYH,GACP9B,MAAK,SAAAkC,GACFL,EAASD,EAAMc,OAAOZ,IACtBC,EAAW,CAACR,KAAK,GAAIC,OAAO,QAVpCmB,MAAM,uBAJNA,MAAM,sBAyCN,UACI,0CACI,uBACIP,MAAON,EAAQN,OACfa,SApDO,SAACC,GACxBP,EAAW,2BAAID,GAAL,IAAaN,OAAOc,EAAMC,OAAOH,eAsDnC,8BACI,wBAAQQ,KAAK,SAAb,sBAIR,wCACA,gCACKhB,EAAMiB,KACH,SAACtB,EAAKuB,GAAN,OAAgB,cAAC,EAAD,CAAM3B,QAASI,EAEXH,WAAY,kBAvC1BT,EAuC6CY,EAAKZ,QAtCpEsB,EACgBtB,GACXX,MAAK,SAAAkC,GACFL,EAASD,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKrC,KAAOA,SAJjC,IAACA,IAsCmBmC,QAIjC,cAAC,EAAD,QClHZG,IAASC,OACP,cAAC,IAAMC,WAAP,UAIE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.c44840c1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`,newObject)\n}\n\nconst deleteItem = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default{\n    getAll: getAll,\n    create: create,\n    update: update,\n    deleteItem: deleteItem\n}","import React, {useEffect, useState} from 'react'\nimport noteService from './services/notes'\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 14\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>fullstack Demo by Sike<br />\n            FrontEnd: React<br />\n            BackEnd: NodeJs<br />\n            DataBase: MongoDB\n        </em>\n      </div> \n    )\n  }\n\nconst Name = ({content, deleteItem}) => {\n    console.log(content);\n    return(\n        <tbody>\n            <tr>\n                <td>{content.name}</td><td>{content.number}</td>\n                <td><button onClick={deleteItem}>delete</button></td>\n            </tr>\n        </tbody>\n    )\n}\n\nconst PhoneBook = () => {\n    const [names, setNames] = useState([])\n    const [newItem, setNewItem] = useState({\n        name:'',\n        number: ''\n    })\n    \n    useEffect(()=>{\n        noteService\n            .getAll()\n            .then(response => {\n                console.log('get success!');\n                setNames(response.data)\n            })\n    },[])\n\n    console.log(\"item get from server:\",names);\n\n    const handleNameChange = (event) => {\n        setNewItem({...newItem,name:event.target.value})\n    }\n\n    const handleNumberChange = (event) => {\n        setNewItem({...newItem,number:event.target.value})\n    }\n\n    const addItem = (event) => {\n        event.preventDefault()\n        if(newItem.name === ''){\n            alert('please input name')\n            return\n        }\n        if(newItem.number === ''){\n            alert('please input number')\n            return\n        }\n        else{\n            // const newItemObject = {...newItem, id: names.length + 1}\n\n            noteService\n                .create(newItem)\n                .then(response => {\n                    setNames(names.concat(newItem))\n                    setNewItem({name:'', number:''})\n                })\n        }\n    }\n\n    const deleteItemOf = (id) => {\n        noteService\n            .deleteItem(id)\n            .then(response => {\n                setNames(names.filter(item => item.id !== id))\n            })\n    }\n\n    console.log('newItem',newItem);\n\n    return (\n        <div>\n            <h1>PhoneBook</h1>\n            <h1>Add a new</h1>\n            <form>\n                <div>name: \n                    <input \n                        value={newItem.name}\n                        onChange={handleNameChange}\n                    />\n                </div>\n            </form>\n            <form onSubmit={addItem}>\n                <div>number: \n                    <input \n                        value={newItem.number}\n                        onChange={handleNumberChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            \n            <h1>Number</h1>\n            <table>\n                {names.map(\n                    (name,index) => <Name content={name} \n                                        key={index} \n                                        deleteItem={() => deleteItemOf(name.id)} />\n                )}\n            </table>\n            <Footer />\n        </div>\n    )\n\n}\n\nexport default PhoneBook","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Test from './Test'\nimport reportWebVitals from './reportWebVitals';\nimport Study from './Study';\nimport PhoneBook from './PhoneBook';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    {/* <Test /> */}\n    {/* <Study /> */}\n    <PhoneBook />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}